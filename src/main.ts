import { app, BrowserWindow, ipcMain } from 'electron';
import { MAIN_EVENTS } from './main-events';
import * as os from 'os';
import { openLoginWindow } from './login-window';
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit();
}

const createWindow = (): void => {
  // Create the browser window.
  const mainWindow = new BrowserWindow({
    height: 600,
    width: 800,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY
    },
  });
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  mainWindow.webContents.openDevTools({
    mode: 'detach'
  })
  
  ipcMain.handle(MAIN_EVENTS.GET_SYSTEM_INFO, (event, args) => {
    return {
      arch: os.arch(),
      release: os.release(),
      hostname: os.hostname(),
      freeMem: os.freemem(),
      totalMem: os.totalmem()
    }
  });
  
  ipcMain.handle(MAIN_EVENTS.START_LOGIN, async (event, args) => {
    const authCode = await openLoginWindow(mainWindow);
    console.log('auth code from login window', authCode);
    return authCode;
  });

  ipcMain.handle(MAIN_EVENTS.PING_FROM_RENDERER, async (event, args) => {
    console.log('Received pong from renderer with: ', args[0]);
    mainWindow.webContents.send(MAIN_EVENTS.PONG_FROM_MAIN, ['data from main']);
  });
};


app.on('ready', createWindow);


app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});


// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
